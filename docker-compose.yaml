version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VARIANT: 3.11
    volumes:
      - ..:/workspace:cached
    command: sleep infinity
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=medicore_db
      - POSTGRES_USER=medicore_user
      - POSTGRES_PASSWORD=medicore_password
      - REDIS_HOST=redis
      - DJANGO_SETTINGS_MODULE=medicore.settings
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - DEBUG=1
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    networks:
      - medicore-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=medicore_db
      - POSTGRES_USER=medicore_user
      - POSTGRES_PASSWORD=medicore_password
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - medicore-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U medicore_user -d medicore_db"] # More accurate check
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: unless-stopped
    volumes:
      - redis-data:/data
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - medicore-network
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 3

  celery:
    build: .
    command: poetry run celery -A medicore worker --loglevel=info
    volumes:
      - .:/code
    working_dir: /code
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=medicore_db
      - POSTGRES_USER=medicore_user
      - POSTGRES_PASSWORD=medicore_password
      - REDIS_HOST=redis
      - DJANGO_SETTINGS_MODULE=medicore.settings
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - DEBUG=1
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    networks:
      - medicore-network
    depends_on:
      - db
      - redis

  celery-beat:
    build: .
    command: poetry run celery -A medicore beat --loglevel=info
    volumes:
      - .:/code
    working_dir: /code
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=medicore_db
      - POSTGRES_USER=medicore_user
      - POSTGRES_PASSWORD=medicore_password
      - REDIS_HOST=redis
      - DJANGO_SETTINGS_MODULE=medicore.settings
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - DEBUG=1
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    networks:
      - medicore-network
    depends_on:
      - db
      - redis

volumes:
  postgres-data:
  redis-data:

networks:
  medicore-network:
    driver: bridge
