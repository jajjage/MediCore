# Generated by Django 5.1.4 on 2025-02-14 11:00

import datetime
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ShiftTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                (
                    "recurrence",
                    models.CharField(
                        choices=[
                            ("DAILY", "Daily"),
                            ("WEEKLY", "Weekly"),
                            ("MONTHLY", "Monthly"),
                            ("YEARLY", "Yearly"),
                        ],
                        default="WEEKLY",
                        max_length=10,
                    ),
                ),
                (
                    "recurrence_parameters",
                    models.JSONField(
                        default=dict,
                        help_text="e.g., {'interval': 1, 'days': ['MON', 'WED']}",
                    ),
                ),
                ("valid_from", models.DateField()),
                ("valid_until", models.DateField(blank=True, null=True)),
                (
                    "required_role",
                    models.CharField(
                        choices=[
                            ("NURSE", "Nurse"),
                            ("PART_TIME", "Part-Time"),
                            ("STUDY", "Study Leave"),
                            ("ANY", "Any"),
                        ],
                        default="ANY",
                        help_text="Role required for this shift",
                        max_length=30,
                    ),
                ),
                (
                    "required_skill",
                    models.CharField(
                        choices=[
                            ("junior", "Junior"),
                            ("senior", "Senior"),
                            ("any", "Any"),
                        ],
                        default="any",
                        max_length=50,
                    ),
                ),
                (
                    "rotation_group",
                    models.CharField(
                        choices=[
                            ("MORNING", "Morning"),
                            ("AFTERNOON", "Afternoon"),
                            ("NIGHT", "Night"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_weekend", models.BooleanField(default=False)),
                ("max_staff_weekday", models.PositiveIntegerField(default=1)),
                ("max_staff_weekend", models.PositiveIntegerField(default=1)),
                (
                    "max_consecutive_weeks",
                    models.PositiveIntegerField(
                        choices=[(1, 1), (2, 2), (3, 3), (4, 4)], default=2
                    ),
                ),
                ("cooldown_weeks", models.PositiveIntegerField(default=4)),
                (
                    "min_shift_gap",
                    models.DurationField(default=datetime.timedelta(seconds=43200)),
                ),
                ("max_staff", models.PositiveIntegerField(default=1)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "penalty_weight",
                    models.FloatField(
                        default=1.0, help_text="Weight for soft constraint violations"
                    ),
                ),
            ],
            options={
                "db_table": "shift_templates",
                "ordering": ["valid_from", "start_time", "rotation_group"],
            },
        ),
        migrations.CreateModel(
            name="WeekendShiftPolicy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("max_weekend_shifts", models.PositiveIntegerField(default=2)),
                ("max_consecutive_weekends", models.PositiveIntegerField(default=2)),
                (
                    "max_weekend_shifts_per_quarter",
                    models.PositiveIntegerField(default=8),
                ),
            ],
            options={
                "db_table": "weekend_shift_policy",
            },
        ),
        migrations.CreateModel(
            name="GeneratedShift",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("start_datetime", models.DateTimeField()),
                ("end_datetime", models.DateTimeField()),
                ("is_emergency_override", models.BooleanField(default=False)),
                ("override_reason", models.TextField(blank=True)),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("ROUTINE", "Routine Appointments"),
                            ("URGENT", "Urgent Care"),
                            ("PROCEDURE", "Procedure Blocks"),
                        ],
                        default="ROUTINE",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("SCHEDULED", "Scheduled"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                            ("EMERGENCY", "Emergency"),
                            ("SWAPPED", "Swapped"),
                        ],
                        default="SCHEDULED",
                        max_length=20,
                    ),
                ),
                ("penalty_score", models.FloatField(default=0.0)),
                (
                    "override_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="overridden_shifts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="generated_shifts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "source_template",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="scheduling.shifttemplate",
                    ),
                ),
            ],
            options={
                "db_table": "generated_shifts",
                "ordering": ["start_datetime"],
            },
        ),
        migrations.CreateModel(
            name="DepartmentMemberShift",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("assignment_start", models.DateField()),
                ("assignment_end", models.DateField(blank=True, null=True)),
                (
                    "max_weekly_occurrences",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "shift_template",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scheduling.shifttemplate",
                    ),
                ),
            ],
            options={
                "db_table": "department_member_shifts",
            },
        ),
        migrations.CreateModel(
            name="UserShiftPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("availability", models.JSONField(default=dict)),
                (
                    "preferred_shift_types",
                    models.ManyToManyField(to="scheduling.shifttemplate"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "nurse_shift_preferences",
            },
        ),
        migrations.CreateModel(
            name="UserShiftState",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("last_shift_end", models.DateTimeField()),
                ("rotation_index", models.IntegerField(default=0)),
                ("consecutive_weeks", models.IntegerField(default=0)),
                ("cooldowns", models.JSONField(default=dict)),
                (
                    "current_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scheduling.shifttemplate",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shift_state",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "nurse_shift_state",
            },
        ),
        migrations.CreateModel(
            name="NurseAvailability",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("reason", models.CharField(max_length=100)),
                (
                    "availability_status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("unavailable", "Unavailable"),
                            ("preferred_off", "Preferred Off"),
                        ],
                        default="available",
                        max_length=20,
                    ),
                ),
                ("is_blackout", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "nurse_availability",
                "ordering": ["start_date", "end_date"],
                "indexes": [
                    models.Index(
                        fields=["start_date", "end_date"],
                        name="nurse_avail_start_d_818336_idx",
                    )
                ],
                "unique_together": {("user", "start_date")},
            },
        ),
        migrations.CreateModel(
            name="ShiftAssignmentHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "previous_state",
                    models.CharField(
                        choices=[
                            ("SCHEDULED", "Scheduled"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                            ("EMERGENCY", "Emergency"),
                            ("SWAPPED", "Swapped"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "new_state",
                    models.CharField(
                        choices=[
                            ("SCHEDULED", "Scheduled"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                            ("EMERGENCY", "Emergency"),
                            ("SWAPPED", "Swapped"),
                        ],
                        max_length=20,
                    ),
                ),
                ("changed_at", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The person responsible for this change",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "shift_assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="scheduling.generatedshift",
                    ),
                ),
            ],
            options={
                "db_table": "nurse_shift_history",
                "ordering": ["changed_at"],
                "indexes": [
                    models.Index(
                        fields=["changed_at"], name="nurse_shift_changed_5cdc4c_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ShiftSwapRequest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Approval"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("reason", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("expiration", models.DateTimeField(null=True)),
                ("constraints", models.JSONField(default=dict)),
                (
                    "original_shift",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="swap_requests_as_original",
                        to="scheduling.generatedshift",
                    ),
                ),
                (
                    "proposed_shift",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="swap_requests_as_proposed",
                        to="scheduling.generatedshift",
                    ),
                ),
                (
                    "requested_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="swap_requested_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "requesting_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="swap_requesting_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "shift_swap_requests",
                "indexes": [
                    models.Index(
                        fields=["expiration"], name="shift_swap__expirat_b5cfa3_idx"
                    )
                ],
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("original_shift_id__isnull", False)),
                        name="original_shift_must_exist",
                    )
                ],
            },
        ),
        migrations.AddIndex(
            model_name="generatedshift",
            index=models.Index(
                fields=["start_datetime", "end_datetime"],
                name="generated_s_start_d_d28450_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="departmentmembershift",
            index=models.Index(
                fields=["assignment_start", "assignment_end"],
                name="department__assignm_36cd7f_idx",
            ),
        ),
    ]
