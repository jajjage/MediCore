# Generated by Django 5.1.4 on 2025-01-07 15:16

import uuid

import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("staff", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalPatient",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("pin", models.CharField(db_index=True, editable=False, max_length=15)),
                ("first_name", models.CharField(max_length=100)),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("last_name", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                (
                    "nin_encrypted",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("email", models.EmailField(db_index=True, max_length=254)),
                (
                    "phone_primary",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid phone number (e.g., +123456789).",
                                regex="^\\+?[1-9]\\d{1,14}$",
                            )
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient",
                "verbose_name_plural": "historical patients",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "pin",
                    models.CharField(
                        db_index=True, editable=False, max_length=15, unique=True
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("last_name", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                (
                    "nin_encrypted",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_primary",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid phone number (e.g., +123456789).",
                                regex="^\\+?[1-9]\\d{1,14}$",
                            )
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "patients",
                "indexes": [
                    models.Index(fields=["email"], name="patients_email_bf0efb_idx"),
                    models.Index(
                        fields=["date_of_birth"], name="patients_date_of_24544d_idx"
                    ),
                    models.Index(
                        fields=["last_name", "first_name"],
                        name="patients_last_na_ce6411_idx",
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(fields=("email",), name="unique_email"),
                    models.UniqueConstraint(fields=("pin",), name="unique_pin"),
                ],
            },
        ),
        migrations.CreateModel(
            name="HistoricalPatientVisit",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("visit_date", models.DateTimeField(db_index=True)),
                ("physician", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "ward_or_clinic",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                (
                    "discharge_date",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("discharge_notes", models.TextField(blank=True, null=True)),
                (
                    "referred_by",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient visit",
                "verbose_name_plural": "historical patient visits",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientOperation",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("operation_date", models.DateField()),
                ("operation_time", models.TimeField(null=True)),
                ("operation_name", models.CharField(max_length=255)),
                (
                    "operation_code",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "surgeon",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        limit_choices_to={"role__name": ["Doctor", "Head Doctor"]},
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient operation",
                "verbose_name_plural": "historical patient operations",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientMedicalReport",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient medical report",
                "verbose_name_plural": "historical patient medical reports",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientEmergencyContact",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "relationship",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient emergency contact",
                "verbose_name_plural": "historical patient emergency contacts",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientDiagnosis",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("diagnosis_date", models.DateField()),
                ("diagnosis_name", models.CharField(max_length=255)),
                ("icd_code", models.CharField(blank=True, max_length=20, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient diagnosis",
                "verbose_name_plural": "historical patient diagnosiss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientDemographics",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("blood_type", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "height_cm",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "weight_kg",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("gender", models.CharField(blank=True, max_length=50, null=True)),
                ("race", models.CharField(blank=True, max_length=50, null=True)),
                ("ethnicity", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "preferred_language",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "marital_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "employment_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient demographics",
                "verbose_name_plural": "historical patient demographicss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientChronicConditions",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("condition", models.CharField(max_length=100)),
                ("diagnosis_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient chronic conditions",
                "verbose_name_plural": "historical patient chronic conditionss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientAppointment",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("appointment_date", models.DateField()),
                ("appointment_time", models.TimeField()),
                ("duration_minutes", models.PositiveIntegerField(default=30)),
                ("reason", models.CharField(max_length=255)),
                ("category", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("color_code", models.CharField(default="#FFFFFF", max_length=7)),
                ("last_modified", models.DateTimeField(blank=True, editable=False)),
                ("is_recurring", models.BooleanField(default=False)),
                (
                    "recurrence_pattern",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Daily", "Daily"),
                            ("Weekly", "Weekly"),
                            ("Monthly", "Monthly"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "physician",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        limit_choices_to={"role__name": "Doctor"},
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient appointment",
                "verbose_name_plural": "historical patient appointments",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientAllergies",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("Mild", "Mild"),
                            ("Moderate", "Moderate"),
                            ("Severe", "Severe"),
                        ],
                        max_length=50,
                    ),
                ),
                ("reaction", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient allergies",
                "verbose_name_plural": "historical patient allergiess",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientAddress",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "address_type",
                    models.CharField(
                        choices=[
                            ("home", "Home"),
                            ("work", "Work"),
                            ("other", "Other"),
                        ],
                        default="home",
                        max_length=50,
                    ),
                ),
                ("street_address1", models.CharField(max_length=255)),
                (
                    "street_address2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                (
                    "postal_code",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid postal code (e.g., 12345 or 12345-6789).",
                                regex="^\\d{5}(-\\d{4})?$",
                            )
                        ],
                    ),
                ),
                ("country", models.CharField(default="United States", max_length=100)),
                ("is_primary", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient address",
                "verbose_name_plural": "historical patient addresss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="PatientAppointment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("appointment_date", models.DateField()),
                ("appointment_time", models.TimeField()),
                ("duration_minutes", models.PositiveIntegerField(default=30)),
                ("reason", models.CharField(max_length=255)),
                ("category", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                ("color_code", models.CharField(default="#FFFFFF", max_length=7)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                ("is_recurring", models.BooleanField(default=False)),
                (
                    "recurrence_pattern",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Daily", "Daily"),
                            ("Weekly", "Weekly"),
                            ("Monthly", "Monthly"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_appointments",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="modified_appointments",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="patients.patient",
                    ),
                ),
                (
                    "physician",
                    models.ForeignKey(
                        limit_choices_to={"role__name": "Doctor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="appointments",
                        to="staff.staffmember",
                    ),
                ),
            ],
            options={
                "db_table": "patient_appointments",
            },
        ),
        migrations.CreateModel(
            name="PatientChronicConditions",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("condition", models.CharField(max_length=100)),
                ("diagnosis_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chronic_conditions",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "patient_chronic_conditions",
            },
        ),
        migrations.CreateModel(
            name="PatientDemographics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("blood_type", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "height_cm",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "weight_kg",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("gender", models.CharField(blank=True, max_length=50, null=True)),
                ("race", models.CharField(blank=True, max_length=50, null=True)),
                ("ethnicity", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "preferred_language",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "marital_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "employment_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demographics",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "patient_demographics",
                "permissions": [
                    ("view_patient", "Can view patient"),
                    ("view_patient_demographics", "Can view patient demographics"),
                ],
            },
        ),
        migrations.CreateModel(
            name="PatientDiagnosis",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("diagnosis_date", models.DateField()),
                ("diagnosis_name", models.CharField(max_length=255)),
                ("icd_code", models.CharField(blank=True, max_length=20, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="diagnoses",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "patient_diagnoses",
            },
        ),
        migrations.CreateModel(
            name="PatientEmergencyContact",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "relationship",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emergency_contact",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "patient_emergency_contacts",
            },
        ),
        migrations.CreateModel(
            name="PatientMedicalReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_reports",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "patient_medical_reports",
            },
        ),
        migrations.CreateModel(
            name="PatientOperation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("operation_date", models.DateField()),
                ("operation_time", models.TimeField(null=True)),
                ("operation_name", models.CharField(max_length=255)),
                (
                    "operation_code",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="modified_operations",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="operations",
                        to="patients.patient",
                    ),
                ),
                (
                    "surgeon",
                    models.ForeignKey(
                        limit_choices_to={"role__name": ["Doctor", "Head Doctor"]},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="operations",
                        to="staff.staffmember",
                    ),
                ),
            ],
            options={
                "db_table": "patient_operations",
            },
        ),
        migrations.CreateModel(
            name="PatientPrescription",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("medicines", models.TextField()),
                ("instructions", models.TextField(blank=True, null=True)),
                ("issued_date", models.DateField(auto_now_add=True)),
                ("valid_until", models.DateField(blank=True, null=True)),
                (
                    "appointment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prescription",
                        to="patients.patientappointment",
                    ),
                ),
                (
                    "issued_by",
                    models.ForeignKey(
                        limit_choices_to={"role__name": "Doctor"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issued_prescriptions",
                        to="staff.staffmember",
                    ),
                ),
            ],
            options={
                "db_table": "patient_prescriptions",
            },
        ),
        migrations.CreateModel(
            name="PatientVisit",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("visit_date", models.DateTimeField(db_index=True)),
                ("physician", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "ward_or_clinic",
                    models.CharField(
                        blank=True, db_index=True, max_length=100, null=True
                    ),
                ),
                (
                    "discharge_date",
                    models.DateTimeField(blank=True, db_index=True, null=True),
                ),
                ("discharge_notes", models.TextField(blank=True, null=True)),
                (
                    "referred_by",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="visits",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "patient_visits",
            },
        ),
        migrations.CreateModel(
            name="PatientAddress",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "address_type",
                    models.CharField(
                        choices=[
                            ("home", "Home"),
                            ("work", "Work"),
                            ("other", "Other"),
                        ],
                        default="home",
                        max_length=50,
                    ),
                ),
                ("street_address1", models.CharField(max_length=255)),
                (
                    "street_address2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                (
                    "postal_code",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid postal code (e.g., 12345 or 12345-6789).",
                                regex="^\\d{5}(-\\d{4})?$",
                            )
                        ],
                    ),
                ),
                ("country", models.CharField(default="United States", max_length=100)),
                ("is_primary", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "patient_addresses",
                "permissions": [
                    ("view_patient", "Can view patient"),
                    ("view_patient_address", "Can view patient address"),
                ],
                "indexes": [
                    models.Index(
                        fields=["postal_code"], name="patient_add_postal__1b2093_idx"
                    ),
                    models.Index(fields=["state"], name="patient_add_state_59b8a6_idx"),
                    models.Index(fields=["city"], name="patient_add_city_e1fa70_idx"),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("is_primary", True)),
                        fields=("patient", "is_primary"),
                        name="unique_primary_address_per_patient",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="PatientAllergies",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("Mild", "Mild"),
                            ("Moderate", "Moderate"),
                            ("Severe", "Severe"),
                        ],
                        max_length=50,
                    ),
                ),
                ("reaction", models.TextField(blank=True, null=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allergies",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "patient_allergies",
                "indexes": [
                    models.Index(
                        fields=["patient"], name="patient_all_patient_71e0e2_idx"
                    ),
                    models.Index(fields=["name"], name="patient_all_name_8d7884_idx"),
                    models.Index(
                        fields=["severity"], name="patient_all_severit_e3fd33_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="patientappointment",
            index=models.Index(
                fields=["appointment_date", "appointment_time"],
                name="patient_app_appoint_3d31b7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="patientappointment",
            index=models.Index(
                fields=["status", "appointment_date"],
                name="patient_app_status_76394a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="patientchronicconditions",
            index=models.Index(
                fields=["patient"], name="patient_chr_patient_86031e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientchronicconditions",
            index=models.Index(
                fields=["condition"], name="patient_chr_conditi_015f84_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientchronicconditions",
            index=models.Index(
                fields=["diagnosis_date"], name="patient_chr_diagnos_30027b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientdemographics",
            index=models.Index(fields=["gender"], name="patient_dem_gender_951d6d_idx"),
        ),
        migrations.AddIndex(
            model_name="patientdemographics",
            index=models.Index(
                fields=["blood_type"], name="patient_dem_blood_t_364bea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientdemographics",
            index=models.Index(
                fields=["preferred_language"], name="patient_dem_preferr_b18c76_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientdemographics",
            index=models.Index(
                fields=["marital_status"], name="patient_dem_marital_aee90b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientdemographics",
            index=models.Index(
                fields=["created_at"], name="patient_dem_created_9c30ef_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientdiagnosis",
            index=models.Index(
                fields=["patient"], name="patient_dia_patient_13836d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientdiagnosis",
            index=models.Index(
                fields=["diagnosis_date"], name="patient_dia_diagnos_9b0b29_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientdiagnosis",
            index=models.Index(
                fields=["diagnosis_name"], name="patient_dia_diagnos_0f2135_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientdiagnosis",
            index=models.Index(
                fields=["icd_code"], name="patient_dia_icd_cod_2032aa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientmedicalreport",
            index=models.Index(
                fields=["patient"], name="patient_med_patient_f90d8b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientmedicalreport",
            index=models.Index(fields=["title"], name="patient_med_title_420860_idx"),
        ),
        migrations.AddIndex(
            model_name="patientmedicalreport",
            index=models.Index(
                fields=["created_at"], name="patient_med_created_d7b0c6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientmedicalreport",
            index=models.Index(
                fields=["updated_at"], name="patient_med_updated_47fee8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientoperation",
            index=models.Index(
                fields=["operation_date", "operation_name"],
                name="patient_ope_operati_57967e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="patientoperation",
            index=models.Index(
                fields=["operation_name", "operation_code"],
                name="patient_ope_operati_c943c2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="patientprescription",
            index=models.Index(
                fields=["appointment"], name="patient_pre_appoint_45a731_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientprescription",
            index=models.Index(
                fields=["issued_by", "issued_date"],
                name="patient_pre_issued__70343c_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="patientprescription",
            index=models.Index(
                fields=["issued_date"], name="patient_pre_issued__a9e4dc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="patientvisit",
            index=models.Index(
                fields=["visit_date", "ward_or_clinic"],
                name="patient_vis_visit_d_fd66ac_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="patientvisit",
            index=models.Index(
                fields=["discharge_date", "patient"],
                name="patient_vis_dischar_c71203_idx",
            ),
        ),
    ]
