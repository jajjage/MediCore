# Generated by Django 5.1.4 on 2025-01-05 11:32

import uuid

import django.core.validators
import django.db.models.deletion
import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("staff", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalPatient",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("pin", models.CharField(db_index=True, editable=False, max_length=15)),
                ("first_name", models.CharField(max_length=100)),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("last_name", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                (
                    "nin_encrypted",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("email", models.EmailField(db_index=True, max_length=254)),
                (
                    "phone_primary",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid phone number (e.g., +123456789).",
                                regex="^\\+?[1-9]\\d{1,14}$",
                            )
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient",
                "verbose_name_plural": "historical patients",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "pin",
                    models.CharField(
                        db_index=True, editable=False, max_length=15, unique=True
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("last_name", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                    ),
                ),
                (
                    "nin_encrypted",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_primary",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid phone number (e.g., +123456789).",
                                regex="^\\+?[1-9]\\d{1,14}$",
                            )
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "patients",
                "indexes": [
                    models.Index(fields=["email"], name="patients_email_bf0efb_idx"),
                    models.Index(
                        fields=["last_name", "first_name"],
                        name="patients_last_na_ce6411_idx",
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(fields=("email",), name="unique_email"),
                    models.UniqueConstraint(fields=("pin",), name="unique_pin"),
                ],
            },
        ),
        migrations.CreateModel(
            name="HistoricalPatientMedicalReport",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient medical report",
                "verbose_name_plural": "historical patient medical reports",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientEmergencyContact",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "relationship",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient emergency contact",
                "verbose_name_plural": "historical patient emergency contacts",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientDemographics",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("blood_type", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "height_cm",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "weight_kg",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("gender", models.CharField(blank=True, max_length=50, null=True)),
                ("race", models.CharField(blank=True, max_length=50, null=True)),
                ("ethnicity", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "preferred_language",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "marital_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "employment_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient demographics",
                "verbose_name_plural": "historical patient demographicss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientChronicCondition",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("condition", models.CharField(max_length=100)),
                ("diagnosis_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient chronic condition",
                "verbose_name_plural": "historical patient chronic conditions",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientAllergy",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("Mild", "Mild"),
                            ("Moderate", "Moderate"),
                            ("Severe", "Severe"),
                        ],
                        max_length=50,
                    ),
                ),
                ("reaction", models.TextField(blank=True, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient allergy",
                "verbose_name_plural": "historical patient allergys",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPatientAddress",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "address_type",
                    models.CharField(
                        choices=[
                            ("home", "Home"),
                            ("work", "Work"),
                            ("other", "Other"),
                        ],
                        default="home",
                        max_length=50,
                    ),
                ),
                ("street_address1", models.CharField(max_length=255)),
                (
                    "street_address2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                (
                    "postal_code",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid postal code (e.g., 12345 or 12345-6789).",
                                regex="^\\d{5}(-\\d{4})?$",
                            )
                        ],
                    ),
                ),
                ("country", models.CharField(default="United States", max_length=100)),
                ("is_primary", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="staff.staffmember",
                    ),
                ),
                (
                    "patient",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical patient address",
                "verbose_name_plural": "historical patient addresss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="PatientAllergy",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("Mild", "Mild"),
                            ("Moderate", "Moderate"),
                            ("Severe", "Severe"),
                        ],
                        max_length=50,
                    ),
                ),
                ("reaction", models.TextField(blank=True, null=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="allergies",
                        to="patients.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientChronicCondition",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("condition", models.CharField(max_length=100)),
                ("diagnosis_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chronic_conditions",
                        to="patients.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientDemographics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("blood_type", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "height_cm",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "weight_kg",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("gender", models.CharField(blank=True, max_length=50, null=True)),
                ("race", models.CharField(blank=True, max_length=50, null=True)),
                ("ethnicity", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "preferred_language",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "marital_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "employment_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demographics",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "patient_demographics",
                "permissions": [
                    ("view_patient", "Can view patient"),
                    ("view_patient_demographics", "Can view patient demographics"),
                ],
            },
        ),
        migrations.CreateModel(
            name="PatientEmergencyContact",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "relationship",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "patient",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emergency_contact",
                        to="patients.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientMedicalReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="medical_reports",
                        to="patients.patient",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PatientAddress",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "address_type",
                    models.CharField(
                        choices=[
                            ("home", "Home"),
                            ("work", "Work"),
                            ("other", "Other"),
                        ],
                        default="home",
                        max_length=50,
                    ),
                ),
                ("street_address1", models.CharField(max_length=255)),
                (
                    "street_address2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                (
                    "postal_code",
                    models.CharField(
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid postal code (e.g., 12345 or 12345-6789).",
                                regex="^\\d{5}(-\\d{4})?$",
                            )
                        ],
                    ),
                ),
                ("country", models.CharField(default="United States", max_length=100)),
                ("is_primary", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "patient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to="patients.patient",
                    ),
                ),
            ],
            options={
                "db_table": "patient_addresses",
                "permissions": [
                    ("view_patient", "Can view patient"),
                    ("view_patient_address", "Can view patient address"),
                ],
                "indexes": [
                    models.Index(
                        fields=["postal_code"], name="patient_add_postal__1b2093_idx"
                    )
                ],
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("is_primary", True)),
                        fields=("patient", "is_primary"),
                        name="unique_primary_address_per_patient",
                    )
                ],
            },
        ),
    ]
